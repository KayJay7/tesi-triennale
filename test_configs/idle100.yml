---
version: "1.0"
image: "abulang/abusim-goabu-agent-log:latest"
coordinator_image: "abulang/abusim-coordinator:latest"
namespace: abusim-example
includes: []
agents:
  agent53:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:53"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 54) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent59:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:59"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 60) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent97:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:97"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 98) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent58:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:58"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 59) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent92:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:92"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 93) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent77:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:77"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 78) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent86:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:86"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 87) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent29:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:29"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 30) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent17:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:17"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 18) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent5:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:5"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 6) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent45:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:45"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 46) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent48:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:48"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 49) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent55:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:55"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 56) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent27:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:27"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 28) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent41:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:41"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 42) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent9:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:9"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 10) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent7:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:7"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 8) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent33:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:33"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 34) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent44:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:44"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 45) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent1:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:1"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 2) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent52:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:52"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 53) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent70:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:70"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 71) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent84:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:84"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 85) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent50:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:50"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 51) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent60:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:60"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 61) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent63:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:63"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 64) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent65:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:65"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 66) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent83:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:83"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 84) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent19:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:19"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 20) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent73:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:73"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 74) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent0:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:0"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 1) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent72:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:72"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 73) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent28:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:28"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 29) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent79:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:79"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 80) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent80:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:80"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 81) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent91:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:91"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 92) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent85:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:85"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 86) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent93:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:93"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 94) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent34:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:34"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 35) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent62:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:62"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 63) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent64:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:64"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 65) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent14:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:14"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 15) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent35:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:35"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 36) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent89:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:89"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 90) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent95:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:95"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 96) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent98:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:98"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 99) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent99:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:99"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 0) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent2:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:2"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 3) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent20:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:20"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 21) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent21:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:21"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 22) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent32:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:32"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 33) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent37:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:37"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 38) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent23:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:23"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 24) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent25:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:25"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 26) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent74:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:74"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 75) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent6:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:6"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 7) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent24:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:24"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 25) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent3:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:3"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 4) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent42:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:42"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 43) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent46:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:46"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 47) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent30:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:30"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 31) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent18:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:18"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 19) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent68:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:68"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 69) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent26:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:26"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 27) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent57:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:57"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 58) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent47:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:47"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 48) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent49:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:49"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 50) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent69:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:69"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 70) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent11:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:11"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 12) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent39:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:39"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 40) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent90:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:90"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 91) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent78:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:78"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 79) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent54:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:54"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 55) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent31:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:31"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 32) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent71:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:71"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 72) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent88:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:88"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 89) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent16:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:16"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 17) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent82:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:82"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 83) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent12:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:12"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 13) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent13:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:13"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 14) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent15:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:15"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 16) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent4:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:4"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 5) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent38:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:38"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 39) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent56:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:56"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 57) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent61:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:61"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 62) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent67:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:67"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 68) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent76:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:76"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 77) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent81:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:81"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 82) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent36:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:36"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 37) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent22:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:22"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 23) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent66:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:66"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 67) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent8:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:8"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 9) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent75:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:75"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 76) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent87:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:87"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 88) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent96:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:96"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 97) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent10:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:10"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 11) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent40:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:40"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 41) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent51:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:51"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 52) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent94:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:94"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 95) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
  agent43:
    prototype: agent
    memory_controller: basic
    memory:
      - "integer:id:43"
    rules:
      - rule activate0 on a0_0 for all this.a0_0 > 0 && (ext.id == 44) do ext.a0_0 = (this.a0_0 - 1)
    tick: 1s
prototypes:
  agent:
    memory_controller: basic
    memory:
      - "bool:start:false"
      - "bool:start_all:false"
      - "integer:a0_0:0"
    rules:
      - rule start on start for start do a0_0 = 3; start = false
      - rule start_all on start_all for all this.start_all do ext.start = true
      - rule start_local on start_all for start_all do start = true; start_all = false
      - rule last_step0 on a0_0 for a0_0 > 0 do a0_0 = 0
    tick: 1s
